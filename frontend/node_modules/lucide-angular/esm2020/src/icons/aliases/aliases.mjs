// AlarmClockCheck aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link AlarmClockCheck} instead. This alias will be removed in v1.0 */
default as AlarmCheck } from '../icons/alarm-clock-check';
// AlarmClockMinus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link AlarmClockMinus} instead. This alias will be removed in v1.0 */
default as AlarmMinus } from '../icons/alarm-clock-minus';
// AlarmClockPlus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link AlarmClockPlus} instead. This alias will be removed in v1.0 */
default as AlarmPlus } from '../icons/alarm-clock-plus';
// ArrowDownAZ aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowDownAZ} instead. This alias will be removed in v1.0 */
default as ArrowDownAz } from '../icons/arrow-down-a-z';
// ArrowDownWideNarrow aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowDownWideNarrow} instead. This alias will be removed in v1.0 */
default as SortDesc } from '../icons/arrow-down-wide-narrow';
// ArrowDownZA aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowDownZA} instead. This alias will be removed in v1.0 */
default as ArrowDownZa } from '../icons/arrow-down-z-a';
// ArrowUpAZ aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowUpAZ} instead. This alias will be removed in v1.0 */
default as ArrowUpAz } from '../icons/arrow-up-a-z';
// ArrowUpNarrowWide aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowUpNarrowWide} instead. This alias will be removed in v1.0 */
default as SortAsc } from '../icons/arrow-up-narrow-wide';
// ArrowUpZA aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowUpZA} instead. This alias will be removed in v1.0 */
default as ArrowUpZa } from '../icons/arrow-up-z-a';
// Axis3d aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Axis3d} instead. This alias will be removed in v1.0 */
default as Axis3D } from '../icons/axis-3d';
// BadgeCheck aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link BadgeCheck} instead. This alias will be removed in v1.0 */
default as Verified } from '../icons/badge-check';
// BadgeQuestionMark aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link BadgeQuestionMark} instead. This alias will be removed in v1.0 */
default as BadgeHelp } from '../icons/badge-question-mark';
// BetweenHorizontalEnd aliases
export { 
/** @deprecated Renamed because of typo, use {@link BetweenHorizontalEnd} instead. This alias will be removed in v1.0 */
default as BetweenHorizonalEnd } from '../icons/between-horizontal-end';
// BetweenHorizontalStart aliases
export { 
/** @deprecated Renamed because of typo, use {@link BetweenHorizontalStart} instead. This alias will be removed in v1.0 */
default as BetweenHorizonalStart } from '../icons/between-horizontal-start';
// BookDashed aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link BookDashed} instead. This alias will be removed in v1.0.0 */
default as BookTemplate } from '../icons/book-dashed';
// Braces aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Braces} instead. This alias will be removed in v1.0 */
default as CurlyBraces } from '../icons/braces';
// Captions aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Captions} instead. This alias will be removed in v1.0 */
default as Subtitles } from '../icons/captions';
// ChartArea aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartArea} instead. This alias will be removed in v1.0 */
default as AreaChart } from '../icons/chart-area';
// ChartBarBig aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartBarBig} instead. This alias will be removed in v1.0 */
default as BarChartHorizontalBig } from '../icons/chart-bar-big';
// ChartBar aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartBar} instead. This alias will be removed in v1.0 */
default as BarChartHorizontal } from '../icons/chart-bar';
// ChartCandlestick aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartCandlestick} instead. This alias will be removed in v1.0 */
default as CandlestickChart } from '../icons/chart-candlestick';
// ChartColumnBig aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartColumnBig} instead. This alias will be removed in v1.0 */
default as BarChartBig } from '../icons/chart-column-big';
// ChartColumnIncreasing aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartColumnIncreasing} instead. This alias will be removed in v1.0 */
default as BarChart4 } from '../icons/chart-column-increasing';
// ChartColumn aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartColumn} instead. This alias will be removed in v1.0 */
default as BarChart3 } from '../icons/chart-column';
// ChartLine aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartLine} instead. This alias will be removed in v1.0 */
default as LineChart } from '../icons/chart-line';
// ChartNoAxesColumnIncreasing aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartNoAxesColumnIncreasing} instead. This alias will be removed in v1.0 */
default as BarChart } from '../icons/chart-no-axes-column-increasing';
// ChartNoAxesColumn aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartNoAxesColumn} instead. This alias will be removed in v1.0 */
default as BarChart2 } from '../icons/chart-no-axes-column';
// ChartPie aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartPie} instead. This alias will be removed in v1.0 */
default as PieChart } from '../icons/chart-pie';
// ChartNoAxesGantt aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartNoAxesGantt} instead. This alias will be removed in v1.0 */
default as GanttChart } from '../icons/chart-no-axes-gantt';
// ChartScatter aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartScatter} instead. This alias will be removed in v1.0 */
default as ScatterChart } from '../icons/chart-scatter';
// Chromium aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Chromium} instead. This alias will be removed in v1.0 */
default as Chrome } from '../icons/chromium';
// CircleAlert aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleAlert} instead. This alias will be removed in v1.0 */
default as AlertCircle } from '../icons/circle-alert';
// CircleArrowDown aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowDown} instead. This alias will be removed in v1.0 */
default as ArrowDownCircle } from '../icons/circle-arrow-down';
// CircleArrowLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowLeft} instead. This alias will be removed in v1.0 */
default as ArrowLeftCircle } from '../icons/circle-arrow-left';
// CircleArrowOutDownLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutDownLeft} instead. This alias will be removed in v1.0 */
default as ArrowDownLeftFromCircle } from '../icons/circle-arrow-out-down-left';
// CircleArrowOutDownRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutDownRight} instead. This alias will be removed in v1.0 */
default as ArrowDownRightFromCircle } from '../icons/circle-arrow-out-down-right';
// CircleArrowOutUpLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutUpLeft} instead. This alias will be removed in v1.0 */
default as ArrowUpLeftFromCircle } from '../icons/circle-arrow-out-up-left';
// CircleArrowOutUpRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutUpRight} instead. This alias will be removed in v1.0 */
default as ArrowUpRightFromCircle } from '../icons/circle-arrow-out-up-right';
// CircleArrowRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowRight} instead. This alias will be removed in v1.0 */
default as ArrowRightCircle } from '../icons/circle-arrow-right';
// CircleArrowUp aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowUp} instead. This alias will be removed in v1.0 */
default as ArrowUpCircle } from '../icons/circle-arrow-up';
// CircleCheck aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleCheck} instead. This alias will be removed in v1.0 */
default as CheckCircle2 } from '../icons/circle-check';
// CircleCheckBig aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleCheckBig} instead. This alias will be removed in v1.0 */
default as CheckCircle } from '../icons/circle-check-big';
// CircleChevronDown aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronDown} instead. This alias will be removed in v1.0 */
default as ChevronDownCircle } from '../icons/circle-chevron-down';
// CircleChevronLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronLeft} instead. This alias will be removed in v1.0 */
default as ChevronLeftCircle } from '../icons/circle-chevron-left';
// CircleChevronRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronRight} instead. This alias will be removed in v1.0 */
default as ChevronRightCircle } from '../icons/circle-chevron-right';
// CircleChevronUp aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronUp} instead. This alias will be removed in v1.0 */
default as ChevronUpCircle } from '../icons/circle-chevron-up';
// CircleDivide aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleDivide} instead. This alias will be removed in v1.0 */
default as DivideCircle } from '../icons/circle-divide';
// CircleGauge aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleGauge} instead. This alias will be removed in v1.0 */
default as GaugeCircle } from '../icons/circle-gauge';
// CircleMinus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleMinus} instead. This alias will be removed in v1.0 */
default as MinusCircle } from '../icons/circle-minus';
// CircleParkingOff aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleParkingOff} instead. This alias will be removed in v1.0 */
default as ParkingCircleOff } from '../icons/circle-parking-off';
// CircleParking aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleParking} instead. This alias will be removed in v1.0 */
default as ParkingCircle } from '../icons/circle-parking';
// CirclePause aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePause} instead. This alias will be removed in v1.0 */
default as PauseCircle } from '../icons/circle-pause';
// CirclePercent aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePercent} instead. This alias will be removed in v1.0 */
default as PercentCircle } from '../icons/circle-percent';
// CirclePlay aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePlay} instead. This alias will be removed in v1.0 */
default as PlayCircle } from '../icons/circle-play';
// CirclePlus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePlus} instead. This alias will be removed in v1.0 */
default as PlusCircle } from '../icons/circle-plus';
// CirclePower aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePower} instead. This alias will be removed in v1.0 */
default as PowerCircle } from '../icons/circle-power';
// CircleQuestionMark aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleQuestionMark} instead. This alias will be removed in v1.0 */
default as HelpCircle } from '../icons/circle-question-mark';
// CircleQuestionMark aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleQuestionMark} instead. This alias will be removed in v1.0 */
default as CircleHelp } from '../icons/circle-question-mark';
// CircleSlash2 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleSlash2} instead. This alias will be removed in v1.0 */
default as CircleSlashed } from '../icons/circle-slash-2';
// CircleStop aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleStop} instead. This alias will be removed in v1.0 */
default as StopCircle } from '../icons/circle-stop';
// CircleUserRound aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleUserRound} instead. This alias will be removed in v1.0 */
default as UserCircle2 } from '../icons/circle-user-round';
// CircleUser aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleUser} instead. This alias will be removed in v1.0 */
default as UserCircle } from '../icons/circle-user';
// CircleX aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleX} instead. This alias will be removed in v1.0 */
default as XCircle } from '../icons/circle-x';
// ClipboardPenLine aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ClipboardPenLine} instead. This alias will be removed in v1.0 */
default as ClipboardSignature } from '../icons/clipboard-pen-line';
// ClipboardPen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ClipboardPen} instead. This alias will be removed in v1.0 */
default as ClipboardEdit } from '../icons/clipboard-pen';
// CloudDownload aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CloudDownload} instead. This alias will be removed in v1.0 */
default as DownloadCloud } from '../icons/cloud-download';
// CloudUpload aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CloudUpload} instead. This alias will be removed in v1.0 */
default as UploadCloud } from '../icons/cloud-upload';
// CodeXml aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CodeXml} instead. This alias will be removed in v1.0 */
default as Code2 } from '../icons/code-xml';
// Columns2 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns2} instead. This alias will be removed in v1.0 */
default as Columns } from '../icons/columns-2';
// Columns3Cog aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns3Cog} instead. This alias will be removed in v1.0 */
default as ColumnsSettings } from '../icons/columns-3-cog';
// Columns3Cog aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns3Cog} instead. This alias will be removed in v1.0 */
default as TableConfig } from '../icons/columns-3-cog';
// Columns3 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns3} instead. This alias will be removed in v1.0 */
default as PanelsLeftRight } from '../icons/columns-3';
// ContactRound aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ContactRound} instead. This alias will be removed in v1.0 */
default as Contact2 } from '../icons/contact-round';
// DiamondPercent aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link DiamondPercent} instead. This alias will be removed in v1.0 */
default as PercentDiamond } from '../icons/diamond-percent';
// Earth aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Earth} instead. This alias will be removed in v1.0 */
default as Globe2 } from '../icons/earth';
// EllipsisVertical aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link EllipsisVertical} instead. This alias will be removed in v1.0 */
default as MoreVertical } from '../icons/ellipsis-vertical';
// Ellipsis aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Ellipsis} instead. This alias will be removed in v1.0 */
default as MoreHorizontal } from '../icons/ellipsis';
// FileAxis3d aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileAxis3d} instead. This alias will be removed in v1.0 */
default as FileAxis3D } from '../icons/file-axis-3d';
// FileChartColumnIncreasing aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartColumnIncreasing} instead. This alias will be removed in v1.0 */
default as FileBarChart } from '../icons/file-chart-column-increasing';
// FileChartColumn aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartColumn} instead. This alias will be removed in v1.0 */
default as FileBarChart2 } from '../icons/file-chart-column';
// FileChartLine aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartLine} instead. This alias will be removed in v1.0 */
default as FileLineChart } from '../icons/file-chart-line';
// FileChartPie aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartPie} instead. This alias will be removed in v1.0 */
default as FilePieChart } from '../icons/file-chart-pie';
// FileCog aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileCog} instead. This alias will be removed in v1.0 */
default as FileCog2 } from '../icons/file-cog';
// FilePenLine aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FilePenLine} instead. This alias will be removed in v1.0 */
default as FileSignature } from '../icons/file-pen-line';
// FilePen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FilePen} instead. This alias will be removed in v1.0 */
default as FileEdit } from '../icons/file-pen';
// FilePlay aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FilePlay} instead. This alias will be removed in v1.0 */
default as FileVideo } from '../icons/file-play';
// FileQuestionMark aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileQuestionMark} instead. This alias will be removed in v1.0 */
default as FileQuestion } from '../icons/file-question-mark';
// FileVideoCamera aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileVideoCamera} instead. This alias will be removed in v1.0 */
default as FileVideo2 } from '../icons/file-video-camera';
// FolderCog aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FolderCog} instead. This alias will be removed in v1.0 */
default as FolderCog2 } from '../icons/folder-cog';
// FolderPen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FolderPen} instead. This alias will be removed in v1.0 */
default as FolderEdit } from '../icons/folder-pen';
// FunnelX aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FunnelX} instead. This alias will be removed in v1.0 */
default as FilterX } from '../icons/funnel-x';
// Funnel aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Funnel} instead. This alias will be removed in v1.0 */
default as Filter } from '../icons/funnel';
// GitCommitHorizontal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link GitCommitHorizontal} instead. This alias will be removed in v1.0 */
default as GitCommit } from '../icons/git-commit-horizontal';
// Grid2x2Check aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2Check} instead. This alias will be removed in v1.0 */
default as Grid2X2Check } from '../icons/grid-2x2-check';
// Grid2x2Plus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2Plus} instead. This alias will be removed in v1.0 */
default as Grid2X2Plus } from '../icons/grid-2x2-plus';
// Grid2x2X aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2X} instead. This alias will be removed in v1.0 */
default as Grid2X2X } from '../icons/grid-2x2-x';
// Grid2x2 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2} instead. This alias will be removed in v1.0 */
default as Grid2X2 } from '../icons/grid-2x2';
// Grid3x3 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid3x3} instead. This alias will be removed in v1.0 */
default as Grid } from '../icons/grid-3x3';
// Grid3x3 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid3x3} instead. This alias will be removed in v1.0 */
default as Grid3X3 } from '../icons/grid-3x3';
// HandGrab aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link HandGrab} instead. This alias will be removed in v1.0 */
default as Grab } from '../icons/hand-grab';
// HandHelping aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link HandHelping} instead. This alias will be removed in v1.0 */
default as HelpingHand } from '../icons/hand-helping';
// House aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link House} instead. This alias will be removed in v1.0 */
default as Home } from '../icons/house';
// IceCreamBowl aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link IceCreamBowl} instead. This alias will be removed in v1.0 */
default as IceCream2 } from '../icons/ice-cream-bowl';
// IceCreamCone aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link IceCreamCone} instead. This alias will be removed in v1.0 */
default as IceCream } from '../icons/ice-cream-cone';
// IndentDecrease aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link IndentDecrease} instead. This alias will be removed in v1.0 */
default as Outdent } from '../icons/indent-decrease';
// IndentIncrease aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link IndentIncrease} instead. This alias will be removed in v1.0 */
default as Indent } from '../icons/indent-increase';
// LaptopMinimal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LaptopMinimal} instead. This alias will be removed in v1.0 */
default as Laptop2 } from '../icons/laptop-minimal';
// Layers aliases
export { 
/** @deprecated The icon was combined with another icon that shares the same use case, use {@link Layers} instead. This alias will be removed in v1.0 */
default as Layers3 } from '../icons/layers';
// LoaderCircle aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LoaderCircle} instead. This alias will be removed in v1.0 */
default as Loader2 } from '../icons/loader-circle';
// LockKeyholeOpen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LockKeyholeOpen} instead. This alias will be removed in v1.0 */
default as UnlockKeyhole } from '../icons/lock-keyhole-open';
// LockOpen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LockOpen} instead. This alias will be removed in v1.0 */
default as Unlock } from '../icons/lock-open';
// MailQuestionMark aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MailQuestionMark} instead. This alias will be removed in v1.0 */
default as MailQuestion } from '../icons/mail-question-mark';
// MapPinPen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MapPinPen} instead. This alias will be removed in v1.0 */
default as LocationEdit } from '../icons/map-pin-pen';
// MessageCircleQuestionMark aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MessageCircleQuestionMark} instead. This alias will be removed in v1.0 */
default as MessageCircleQuestion } from '../icons/message-circle-question-mark';
// MicVocal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MicVocal} instead. This alias will be removed in v1.0 */
default as Mic2 } from '../icons/mic-vocal';
// Move3d aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Move3d} instead. This alias will be removed in v1.0 */
default as Move3D } from '../icons/move-3d';
// OctagonAlert aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link OctagonAlert} instead. This alias will be removed in v1.0 */
default as AlertOctagon } from '../icons/octagon-alert';
// OctagonPause aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link OctagonPause} instead. This alias will be removed in v1.0 */
default as PauseOctagon } from '../icons/octagon-pause';
// OctagonX aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link OctagonX} instead. This alias will be removed in v1.0 */
default as XOctagon } from '../icons/octagon-x';
// PaintbrushVertical aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PaintbrushVertical} instead. This alias will be removed in v1.0 */
default as Paintbrush2 } from '../icons/paintbrush-vertical';
// PanelBottomDashed aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelBottomDashed} instead. This alias will be removed in v1.0 */
default as PanelBottomInactive } from '../icons/panel-bottom-dashed';
// PanelLeftClose aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeftClose} instead. This alias will be removed in v1.0 */
default as SidebarClose } from '../icons/panel-left-close';
// PanelLeftDashed aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeftDashed} instead. This alias will be removed in v1.0 */
default as PanelLeftInactive } from '../icons/panel-left-dashed';
// PanelLeftOpen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeftOpen} instead. This alias will be removed in v1.0 */
default as SidebarOpen } from '../icons/panel-left-open';
// PanelLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeft} instead. This alias will be removed in v1.0 */
default as Sidebar } from '../icons/panel-left';
// PanelRightDashed aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelRightDashed} instead. This alias will be removed in v1.0 */
default as PanelRightInactive } from '../icons/panel-right-dashed';
// PanelTopDashed aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelTopDashed} instead. This alias will be removed in v1.0 */
default as PanelTopInactive } from '../icons/panel-top-dashed';
// PanelsTopLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelsTopLeft} instead. This alias will be removed in v1.0 */
default as Layout } from '../icons/panels-top-left';
// PenLine aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PenLine} instead. This alias will be removed in v1.0 */
default as Edit3 } from '../icons/pen-line';
// Pen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Pen} instead. This alias will be removed in v1.0 */
default as Edit2 } from '../icons/pen';
// PlugZap aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PlugZap} instead. This alias will be removed in v1.0 */
default as PlugZap2 } from '../icons/plug-zap';
// RectangleEllipsis aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link RectangleEllipsis} instead. This alias will be removed in v1.0 */
default as FormInput } from '../icons/rectangle-ellipsis';
// Rotate3d aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Rotate3d} instead. This alias will be removed in v1.0 */
default as Rotate3D } from '../icons/rotate-3d';
// Rows2 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Rows2} instead. This alias will be removed in v1.0 */
default as Rows } from '../icons/rows-2';
// Rows3 aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Rows3} instead. This alias will be removed in v1.0 */
default as PanelsTopBottom } from '../icons/rows-3';
// Scale3d aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Scale3d} instead. This alias will be removed in v1.0 */
default as Scale3D } from '../icons/scale-3d';
// SendHorizontal aliases
export { 
/** @deprecated Renamed because of typo, use {@link SendHorizontal} instead. This alias will be removed in v1.0 */
default as SendHorizonal } from '../icons/send-horizontal';
// ShieldQuestionMark aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ShieldQuestionMark} instead. This alias will be removed in v1.0 */
default as ShieldQuestion } from '../icons/shield-question-mark';
// ShieldX aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ShieldX} instead. This alias will be removed in v1.0 */
default as ShieldClose } from '../icons/shield-x';
// SlidersVertical aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SlidersVertical} instead. This alias will be removed in v1.0 */
default as Sliders } from '../icons/sliders-vertical';
// Sparkles aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Sparkles} instead. This alias will be removed in v1.0 */
default as Stars } from '../icons/sparkles';
// SquareActivity aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareActivity} instead. This alias will be removed in v1.0 */
default as ActivitySquare } from '../icons/square-activity';
// SquareArrowDownLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowDownLeft} instead. This alias will be removed in v1.0 */
default as ArrowDownLeftSquare } from '../icons/square-arrow-down-left';
// SquareArrowDownRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowDownRight} instead. This alias will be removed in v1.0 */
default as ArrowDownRightSquare } from '../icons/square-arrow-down-right';
// SquareArrowDown aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowDown} instead. This alias will be removed in v1.0 */
default as ArrowDownSquare } from '../icons/square-arrow-down';
// SquareArrowLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowLeft} instead. This alias will be removed in v1.0 */
default as ArrowLeftSquare } from '../icons/square-arrow-left';
// SquareArrowOutDownRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutDownRight} instead. This alias will be removed in v1.0 */
default as ArrowDownRightFromSquare } from '../icons/square-arrow-out-down-right';
// SquareArrowOutDownLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutDownLeft} instead. This alias will be removed in v1.0 */
default as ArrowDownLeftFromSquare } from '../icons/square-arrow-out-down-left';
// SquareArrowOutUpLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutUpLeft} instead. This alias will be removed in v1.0 */
default as ArrowUpLeftFromSquare } from '../icons/square-arrow-out-up-left';
// SquareArrowRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowRight} instead. This alias will be removed in v1.0 */
default as ArrowRightSquare } from '../icons/square-arrow-right';
// SquareArrowOutUpRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutUpRight} instead. This alias will be removed in v1.0 */
default as ArrowUpRightFromSquare } from '../icons/square-arrow-out-up-right';
// SquareArrowUpLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowUpLeft} instead. This alias will be removed in v1.0 */
default as ArrowUpLeftSquare } from '../icons/square-arrow-up-left';
// SquareArrowUpRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowUpRight} instead. This alias will be removed in v1.0 */
default as ArrowUpRightSquare } from '../icons/square-arrow-up-right';
// SquareArrowUp aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowUp} instead. This alias will be removed in v1.0 */
default as ArrowUpSquare } from '../icons/square-arrow-up';
// SquareAsterisk aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareAsterisk} instead. This alias will be removed in v1.0 */
default as AsteriskSquare } from '../icons/square-asterisk';
// SquareBottomDashedScissors aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareBottomDashedScissors} instead. This alias will be removed in v1.0 */
default as ScissorsSquareDashedBottom } from '../icons/square-bottom-dashed-scissors';
// SquareChartGantt aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChartGantt} instead. This alias will be removed in v1.0 */
default as GanttChartSquare } from '../icons/square-chart-gantt';
// SquareChartGantt aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChartGantt} instead. This alias will be removed in v1.0 */
default as SquareGanttChart } from '../icons/square-chart-gantt';
// SquareCheckBig aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareCheckBig} instead. This alias will be removed in v1.0 */
default as CheckSquare } from '../icons/square-check-big';
// SquareCheck aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareCheck} instead. This alias will be removed in v1.0 */
default as CheckSquare2 } from '../icons/square-check';
// SquareChevronDown aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronDown} instead. This alias will be removed in v1.0 */
default as ChevronDownSquare } from '../icons/square-chevron-down';
// SquareChevronLeft aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronLeft} instead. This alias will be removed in v1.0 */
default as ChevronLeftSquare } from '../icons/square-chevron-left';
// SquareChevronRight aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronRight} instead. This alias will be removed in v1.0 */
default as ChevronRightSquare } from '../icons/square-chevron-right';
// SquareChevronUp aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronUp} instead. This alias will be removed in v1.0 */
default as ChevronUpSquare } from '../icons/square-chevron-up';
// SquareCode aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareCode} instead. This alias will be removed in v1.0 */
default as CodeSquare } from '../icons/square-code';
// SquareDashedKanban aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDashedKanban} instead. This alias will be removed in v1.0 */
default as KanbanSquareDashed } from '../icons/square-dashed-kanban';
// SquareDashed aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDashed} instead. This alias will be removed in v1.0 */
default as BoxSelect } from '../icons/square-dashed';
// SquareDivide aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDivide} instead. This alias will be removed in v1.0 */
default as DivideSquare } from '../icons/square-divide';
// SquareDashedMousePointer aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDashedMousePointer} instead. This alias will be removed in v1.0 */
default as MousePointerSquareDashed } from '../icons/square-dashed-mouse-pointer';
// SquareDot aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDot} instead. This alias will be removed in v1.0 */
default as DotSquare } from '../icons/square-dot';
// SquareEqual aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareEqual} instead. This alias will be removed in v1.0 */
default as EqualSquare } from '../icons/square-equal';
// SquareFunction aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareFunction} instead. This alias will be removed in v1.0 */
default as FunctionSquare } from '../icons/square-function';
// SquareLibrary aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareLibrary} instead. This alias will be removed in v1.0 */
default as LibrarySquare } from '../icons/square-library';
// SquareM aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareM} instead. This alias will be removed in v1.0 */
default as MSquare } from '../icons/square-m';
// SquareKanban aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareKanban} instead. This alias will be removed in v1.0 */
default as KanbanSquare } from '../icons/square-kanban';
// SquareMenu aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareMenu} instead. This alias will be removed in v1.0 */
default as MenuSquare } from '../icons/square-menu';
// SquareMousePointer aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareMousePointer} instead. This alias will be removed in v1.0 */
default as Inspect } from '../icons/square-mouse-pointer';
// SquareMinus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareMinus} instead. This alias will be removed in v1.0 */
default as MinusSquare } from '../icons/square-minus';
// SquareParkingOff aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareParkingOff} instead. This alias will be removed in v1.0 */
default as ParkingSquareOff } from '../icons/square-parking-off';
// SquareParking aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareParking} instead. This alias will be removed in v1.0 */
default as ParkingSquare } from '../icons/square-parking';
// SquarePercent aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePercent} instead. This alias will be removed in v1.0 */
default as PercentSquare } from '../icons/square-percent';
// SquarePen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePen} instead. This alias will be removed in v1.0 */
default as PenBox } from '../icons/square-pen';
// SquarePen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePen} instead. This alias will be removed in v1.0 */
default as Edit } from '../icons/square-pen';
// SquarePen aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePen} instead. This alias will be removed in v1.0 */
default as PenSquare } from '../icons/square-pen';
// SquarePi aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePi} instead. This alias will be removed in v1.0 */
default as PiSquare } from '../icons/square-pi';
// SquarePilcrow aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePilcrow} instead. This alias will be removed in v1.0 */
default as PilcrowSquare } from '../icons/square-pilcrow';
// SquarePlay aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePlay} instead. This alias will be removed in v1.0 */
default as PlaySquare } from '../icons/square-play';
// SquarePlus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePlus} instead. This alias will be removed in v1.0 */
default as PlusSquare } from '../icons/square-plus';
// SquarePower aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePower} instead. This alias will be removed in v1.0 */
default as PowerSquare } from '../icons/square-power';
// SquareScissors aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareScissors} instead. This alias will be removed in v1.0 */
default as ScissorsSquare } from '../icons/square-scissors';
// SquareSigma aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSigma} instead. This alias will be removed in v1.0 */
default as SigmaSquare } from '../icons/square-sigma';
// SquareSlash aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSlash} instead. This alias will be removed in v1.0 */
default as SlashSquare } from '../icons/square-slash';
// SquareSplitHorizontal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSplitHorizontal} instead. This alias will be removed in v1.0 */
default as SplitSquareHorizontal } from '../icons/square-split-horizontal';
// SquareSplitVertical aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSplitVertical} instead. This alias will be removed in v1.0 */
default as SplitSquareVertical } from '../icons/square-split-vertical';
// SquareTerminal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareTerminal} instead. This alias will be removed in v1.0 */
default as TerminalSquare } from '../icons/square-terminal';
// SquareUserRound aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareUserRound} instead. This alias will be removed in v1.0 */
default as UserSquare2 } from '../icons/square-user-round';
// SquareUser aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareUser} instead. This alias will be removed in v1.0 */
default as UserSquare } from '../icons/square-user';
// SquareX aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareX} instead. This alias will be removed in v1.0 */
default as XSquare } from '../icons/square-x';
// TestTubeDiagonal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TestTubeDiagonal} instead. This alias will be removed in v1.0 */
default as TestTube2 } from '../icons/test-tube-diagonal';
// TextSelect aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextSelect} instead. This alias will be removed in v1.0 */
default as TextSelection } from '../icons/text-select';
// TramFront aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TramFront} instead. This alias will be removed in v1.0 */
default as Train } from '../icons/tram-front';
// TriangleAlert aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TriangleAlert} instead. This alias will be removed in v1.0 */
default as AlertTriangle } from '../icons/triangle-alert';
// TreePalm aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TreePalm} instead. This alias will be removed in v1.0 */
default as Palmtree } from '../icons/tree-palm';
// TvMinimal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TvMinimal} instead. This alias will be removed in v1.0 */
default as Tv2 } from '../icons/tv-minimal';
// University aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link University} instead. This alias will be removed in v1.0 */
default as School2 } from '../icons/university';
// UserRoundCheck aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundCheck} instead. This alias will be removed in v1.0 */
default as UserCheck2 } from '../icons/user-round-check';
// UserRoundCog aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundCog} instead. This alias will be removed in v1.0 */
default as UserCog2 } from '../icons/user-round-cog';
// UserRoundMinus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundMinus} instead. This alias will be removed in v1.0 */
default as UserMinus2 } from '../icons/user-round-minus';
// UserRoundPlus aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundPlus} instead. This alias will be removed in v1.0 */
default as UserPlus2 } from '../icons/user-round-plus';
// UserRoundX aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundX} instead. This alias will be removed in v1.0 */
default as UserX2 } from '../icons/user-round-x';
// UserRound aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRound} instead. This alias will be removed in v1.0 */
default as User2 } from '../icons/user-round';
// UsersRound aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UsersRound} instead. This alias will be removed in v1.0 */
default as Users2 } from '../icons/users-round';
// UtensilsCrossed aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UtensilsCrossed} instead. This alias will be removed in v1.0 */
default as ForkKnifeCrossed } from '../icons/utensils-crossed';
// Utensils aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Utensils} instead. This alias will be removed in v1.0 */
default as ForkKnife } from '../icons/utensils';
// WalletMinimal aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link WalletMinimal} instead. This alias will be removed in v1.0 */
default as Wallet2 } from '../icons/wallet-minimal';
// WandSparkles aliases
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link WandSparkles} instead. This alias will be removed in v1.0 */
default as Wand2 } from '../icons/wand-sparkles';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxpYXNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hbGlhc2VzL2FsaWFzZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsMEJBQTBCO0FBQzFCLE9BQU87QUFDTCwyS0FBMks7QUFDM0ssT0FBTyxJQUFJLFVBQVUsRUFDdEIsTUFBTSw0QkFBNEIsQ0FBQztBQUVwQywwQkFBMEI7QUFDMUIsT0FBTztBQUNMLDJLQUEySztBQUMzSyxPQUFPLElBQUksVUFBVSxFQUN0QixNQUFNLDRCQUE0QixDQUFDO0FBRXBDLHlCQUF5QjtBQUN6QixPQUFPO0FBQ0wsMEtBQTBLO0FBQzFLLE9BQU8sSUFBSSxTQUFTLEVBQ3JCLE1BQU0sMkJBQTJCLENBQUM7QUFFbkMsc0JBQXNCO0FBQ3RCLE9BQU87QUFDTCx1S0FBdUs7QUFDdkssT0FBTyxJQUFJLFdBQVcsRUFDdkIsTUFBTSx5QkFBeUIsQ0FBQztBQUVqQyw4QkFBOEI7QUFDOUIsT0FBTztBQUNMLCtLQUErSztBQUMvSyxPQUFPLElBQUksUUFBUSxFQUNwQixNQUFNLGlDQUFpQyxDQUFDO0FBRXpDLHNCQUFzQjtBQUN0QixPQUFPO0FBQ0wsdUtBQXVLO0FBQ3ZLLE9BQU8sSUFBSSxXQUFXLEVBQ3ZCLE1BQU0seUJBQXlCLENBQUM7QUFFakMsb0JBQW9CO0FBQ3BCLE9BQU87QUFDTCxxS0FBcUs7QUFDckssT0FBTyxJQUFJLFNBQVMsRUFDckIsTUFBTSx1QkFBdUIsQ0FBQztBQUUvQiw0QkFBNEI7QUFDNUIsT0FBTztBQUNMLDZLQUE2SztBQUM3SyxPQUFPLElBQUksT0FBTyxFQUNuQixNQUFNLCtCQUErQixDQUFDO0FBRXZDLG9CQUFvQjtBQUNwQixPQUFPO0FBQ0wscUtBQXFLO0FBQ3JLLE9BQU8sSUFBSSxTQUFTLEVBQ3JCLE1BQU0sdUJBQXVCLENBQUM7QUFFL0IsaUJBQWlCO0FBQ2pCLE9BQU87QUFDTCxrS0FBa0s7QUFDbEssT0FBTyxJQUFJLE1BQU0s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O0FBQ0wsc0tBQXNLO0FBQ3RLLE9BQU8sSUFBSSxNQUFNLEVBQ2xCLE1BQU0sc0JBQXNCLENBQUM7QUFFOUIsMEJBQTBCO0FBQzFCLE9BQU87QUFDTCwyS0FBMks7QUFDM0ssT0FBTyxJQUFJLGdCQUFnQixFQUM1QixNQUFNLDJCQUEyQixDQUFDO0FBRW5DLG1CQUFtQjtBQUNuQixPQUFPO0FBQ0wsb0tBQW9LO0FBQ3BLLE9BQU8sSUFBSSxTQUFTLEVBQ3JCLE1BQU0sbUJBQW1CLENBQUM7QUFFM0Isd0JBQXdCO0FBQ3hCLE9BQU87QUFDTCx5S0FBeUs7QUFDekssT0FBTyxJQUFJLE9BQU8sRUFDbkIsTUFBTSx5QkFBeUIsQ0FBQztBQUVqQyx1QkFBdUI7QUFDdkIsT0FBTztBQUNMLHdLQUF3SztBQUN4SyxPQUFPLElBQUksS0FBSyxFQUNqQixNQUFNLHdCQUF3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBBbGFybUNsb2NrQ2hlY2sgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQWxhcm1DbG9ja0NoZWNrfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQWxhcm1DaGVja1xufSBmcm9tICcuLi9pY29ucy9hbGFybS1jbG9jay1jaGVjayc7XG5cbi8vIEFsYXJtQ2xvY2tNaW51cyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBBbGFybUNsb2NrTWludXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBbGFybU1pbnVzXG59IGZyb20gJy4uL2ljb25zL2FsYXJtLWNsb2NrLW1pbnVzJztcblxuLy8gQWxhcm1DbG9ja1BsdXMgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQWxhcm1DbG9ja1BsdXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBbGFybVBsdXNcbn0gZnJvbSAnLi4vaWNvbnMvYWxhcm0tY2xvY2stcGx1cyc7XG5cbi8vIEFycm93RG93bkFaIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEFycm93RG93bkFafSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dEb3duQXpcbn0gZnJvbSAnLi4vaWNvbnMvYXJyb3ctZG93bi1hLXonO1xuXG4vLyBBcnJvd0Rvd25XaWRlTmFycm93IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEFycm93RG93bldpZGVOYXJyb3d9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBTb3J0RGVzY1xufSBmcm9tICcuLi9pY29ucy9hcnJvdy1kb3duLXdpZGUtbmFycm93JztcblxuLy8gQXJyb3dEb3duWkEgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQXJyb3dEb3duWkF9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBcnJvd0Rvd25aYVxufSBmcm9tICcuLi9pY29ucy9hcnJvdy1kb3duLXotYSc7XG5cbi8vIEFycm93VXBBWiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBBcnJvd1VwQVp9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBcnJvd1VwQXpcbn0gZnJvbSAnLi4vaWNvbnMvYXJyb3ctdXAtYS16JztcblxuLy8gQXJyb3dVcE5hcnJvd1dpZGUgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQXJyb3dVcE5hcnJvd1dpZGV9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBTb3J0QXNjXG59IGZyb20gJy4uL2ljb25zL2Fycm93LXVwLW5hcnJvdy13aWRlJztcblxuLy8gQXJyb3dVcFpBIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEFycm93VXBaQX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFycm93VXBaYVxufSBmcm9tICcuLi9pY29ucy9hcnJvdy11cC16LWEnO1xuXG4vLyBBeGlzM2QgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQXhpczNkfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXhpczNEXG59IGZyb20gJy4uL2ljb25zL2F4aXMtM2QnO1xuXG4vLyBCYWRnZUNoZWNrIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEJhZGdlQ2hlY2t9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBWZXJpZmllZFxufSBmcm9tICcuLi9pY29ucy9iYWRnZS1jaGVjayc7XG5cbi8vIEJhZGdlUXVlc3Rpb25NYXJrIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEJhZGdlUXVlc3Rpb25NYXJrfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQmFkZ2VIZWxwXG59IGZyb20gJy4uL2ljb25zL2JhZGdlLXF1ZXN0aW9uLW1hcmsnO1xuXG4vLyBCZXR3ZWVuSG9yaXpvbnRhbEVuZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgUmVuYW1lZCBiZWNhdXNlIG9mIHR5cG8sIHVzZSB7QGxpbmsgQmV0d2Vlbkhvcml6b250YWxFbmR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBCZXR3ZWVuSG9yaXpvbmFsRW5kXG59IGZyb20gJy4uL2ljb25zL2JldHdlZW4taG9yaXpvbnRhbC1lbmQnO1xuXG4vLyBCZXR3ZWVuSG9yaXpvbnRhbFN0YXJ0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBSZW5hbWVkIGJlY2F1c2Ugb2YgdHlwbywgdXNlIHtAbGluayBCZXR3ZWVuSG9yaXpvbnRhbFN0YXJ0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQmV0d2Vlbkhvcml6b25hbFN0YXJ0XG59IGZyb20gJy4uL2ljb25zL2JldHdlZW4taG9yaXpvbnRhbC1zdGFydCc7XG5cbi8vIEJvb2tEYXNoZWQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQm9va0Rhc2hlZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMC4wICovXG4gIGRlZmF1bHQgYXMgQm9va1RlbXBsYXRlXG59IGZyb20gJy4uL2ljb25zL2Jvb2stZGFzaGVkJztcblxuLy8gQnJhY2VzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEJyYWNlc30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEN1cmx5QnJhY2VzXG59IGZyb20gJy4uL2ljb25zL2JyYWNlcyc7XG5cbi8vIENhcHRpb25zIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENhcHRpb25zfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgU3VidGl0bGVzXG59IGZyb20gJy4uL2ljb25zL2NhcHRpb25zJztcblxuLy8gQ2hhcnRBcmVhIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENoYXJ0QXJlYX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFyZWFDaGFydFxufSBmcm9tICcuLi9pY29ucy9jaGFydC1hcmVhJztcblxuLy8gQ2hhcnRCYXJCaWcgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2hhcnRCYXJCaWd9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBCYXJDaGFydEhvcml6b250YWxCaWdcbn0gZnJvbSAnLi4vaWNvbnMvY2hhcnQtYmFyLWJpZyc7XG5cbi8vIENoYXJ0QmFyIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENoYXJ0QmFyfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQmFyQ2hhcnRIb3Jpem9udGFsXG59IGZyb20gJy4uL2ljb25zL2NoYXJ0LWJhcic7XG5cbi8vIENoYXJ0Q2FuZGxlc3RpY2sgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2hhcnRDYW5kbGVzdGlja30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIENhbmRsZXN0aWNrQ2hhcnRcbn0gZnJvbSAnLi4vaWNvbnMvY2hhcnQtY2FuZGxlc3RpY2snO1xuXG4vLyBDaGFydENvbHVtbkJpZyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaGFydENvbHVtbkJpZ30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEJhckNoYXJ0QmlnXG59IGZyb20gJy4uL2ljb25zL2NoYXJ0LWNvbHVtbi1iaWcnO1xuXG4vLyBDaGFydENvbHVtbkluY3JlYXNpbmcgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2hhcnRDb2x1bW5JbmNyZWFzaW5nfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQmFyQ2hhcnQ0XG59IGZyb20gJy4uL2ljb25zL2NoYXJ0LWNvbHVtbi1pbmNyZWFzaW5nJztcblxuLy8gQ2hhcnRDb2x1bW4gYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2hhcnRDb2x1bW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBCYXJDaGFydDNcbn0gZnJvbSAnLi4vaWNvbnMvY2hhcnQtY29sdW1uJztcblxuLy8gQ2hhcnRMaW5lIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENoYXJ0TGluZX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIExpbmVDaGFydFxufSBmcm9tICcuLi9pY29ucy9jaGFydC1saW5lJztcblxuLy8gQ2hhcnROb0F4ZXNDb2x1bW5JbmNyZWFzaW5nIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENoYXJ0Tm9BeGVzQ29sdW1uSW5jcmVhc2luZ30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEJhckNoYXJ0XG59IGZyb20gJy4uL2ljb25zL2NoYXJ0LW5vLWF4ZXMtY29sdW1uLWluY3JlYXNpbmcnO1xuXG4vLyBDaGFydE5vQXhlc0NvbHVtbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaGFydE5vQXhlc0NvbHVtbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEJhckNoYXJ0MlxufSBmcm9tICcuLi9pY29ucy9jaGFydC1uby1heGVzLWNvbHVtbic7XG5cbi8vIENoYXJ0UGllIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENoYXJ0UGllfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGllQ2hhcnRcbn0gZnJvbSAnLi4vaWNvbnMvY2hhcnQtcGllJztcblxuLy8gQ2hhcnROb0F4ZXNHYW50dCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaGFydE5vQXhlc0dhbnR0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgR2FudHRDaGFydFxufSBmcm9tICcuLi9pY29ucy9jaGFydC1uby1heGVzLWdhbnR0JztcblxuLy8gQ2hhcnRTY2F0dGVyIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENoYXJ0U2NhdHRlcn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNjYXR0ZXJDaGFydFxufSBmcm9tICcuLi9pY29ucy9jaGFydC1zY2F0dGVyJztcblxuLy8gQ2hyb21pdW0gYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2hyb21pdW19IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaHJvbWVcbn0gZnJvbSAnLi4vaWNvbnMvY2hyb21pdW0nO1xuXG4vLyBDaXJjbGVBbGVydCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVBbGVydH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFsZXJ0Q2lyY2xlXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1hbGVydCc7XG5cbi8vIENpcmNsZUFycm93RG93biBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVBcnJvd0Rvd259IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBcnJvd0Rvd25DaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLWFycm93LWRvd24nO1xuXG4vLyBDaXJjbGVBcnJvd0xlZnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlQXJyb3dMZWZ0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dMZWZ0Q2lyY2xlXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1hcnJvdy1sZWZ0JztcblxuLy8gQ2lyY2xlQXJyb3dPdXREb3duTGVmdCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVBcnJvd091dERvd25MZWZ0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dEb3duTGVmdEZyb21DaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLWFycm93LW91dC1kb3duLWxlZnQnO1xuXG4vLyBDaXJjbGVBcnJvd091dERvd25SaWdodCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVBcnJvd091dERvd25SaWdodH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFycm93RG93blJpZ2h0RnJvbUNpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtYXJyb3ctb3V0LWRvd24tcmlnaHQnO1xuXG4vLyBDaXJjbGVBcnJvd091dFVwTGVmdCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVBcnJvd091dFVwTGVmdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFycm93VXBMZWZ0RnJvbUNpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtYXJyb3ctb3V0LXVwLWxlZnQnO1xuXG4vLyBDaXJjbGVBcnJvd091dFVwUmlnaHQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlQXJyb3dPdXRVcFJpZ2h0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dVcFJpZ2h0RnJvbUNpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtYXJyb3ctb3V0LXVwLXJpZ2h0JztcblxuLy8gQ2lyY2xlQXJyb3dSaWdodCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVBcnJvd1JpZ2h0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dSaWdodENpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtYXJyb3ctcmlnaHQnO1xuXG4vLyBDaXJjbGVBcnJvd1VwIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZUFycm93VXB9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBcnJvd1VwQ2lyY2xlXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1hcnJvdy11cCc7XG5cbi8vIENpcmNsZUNoZWNrIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZUNoZWNrfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQ2hlY2tDaXJjbGUyXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1jaGVjayc7XG5cbi8vIENpcmNsZUNoZWNrQmlnIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZUNoZWNrQmlnfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQ2hlY2tDaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLWNoZWNrLWJpZyc7XG5cbi8vIENpcmNsZUNoZXZyb25Eb3duIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZUNoZXZyb25Eb3dufSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQ2hldnJvbkRvd25DaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLWNoZXZyb24tZG93bic7XG5cbi8vIENpcmNsZUNoZXZyb25MZWZ0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZUNoZXZyb25MZWZ0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQ2hldnJvbkxlZnRDaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLWNoZXZyb24tbGVmdCc7XG5cbi8vIENpcmNsZUNoZXZyb25SaWdodCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVDaGV2cm9uUmlnaHR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaGV2cm9uUmlnaHRDaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLWNoZXZyb24tcmlnaHQnO1xuXG4vLyBDaXJjbGVDaGV2cm9uVXAgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlQ2hldnJvblVwfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQ2hldnJvblVwQ2lyY2xlXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1jaGV2cm9uLXVwJztcblxuLy8gQ2lyY2xlRGl2aWRlIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZURpdmlkZX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIERpdmlkZUNpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtZGl2aWRlJztcblxuLy8gQ2lyY2xlR2F1Z2UgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlR2F1Z2V9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBHYXVnZUNpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtZ2F1Z2UnO1xuXG4vLyBDaXJjbGVNaW51cyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVNaW51c30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIE1pbnVzQ2lyY2xlXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1taW51cyc7XG5cbi8vIENpcmNsZVBhcmtpbmdPZmYgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlUGFya2luZ09mZn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBhcmtpbmdDaXJjbGVPZmZcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLXBhcmtpbmctb2ZmJztcblxuLy8gQ2lyY2xlUGFya2luZyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVQYXJraW5nfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGFya2luZ0NpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtcGFya2luZyc7XG5cbi8vIENpcmNsZVBhdXNlIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZVBhdXNlfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGF1c2VDaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLXBhdXNlJztcblxuLy8gQ2lyY2xlUGVyY2VudCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVQZXJjZW50fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGVyY2VudENpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtcGVyY2VudCc7XG5cbi8vIENpcmNsZVBsYXkgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlUGxheX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBsYXlDaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLXBsYXknO1xuXG4vLyBDaXJjbGVQbHVzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZVBsdXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQbHVzQ2lyY2xlXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1wbHVzJztcblxuLy8gQ2lyY2xlUG93ZXIgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlUG93ZXJ9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQb3dlckNpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtcG93ZXInO1xuXG4vLyBDaXJjbGVRdWVzdGlvbk1hcmsgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlUXVlc3Rpb25NYXJrfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgSGVscENpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtcXVlc3Rpb24tbWFyayc7XG5cbi8vIENpcmNsZVF1ZXN0aW9uTWFyayBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVRdWVzdGlvbk1hcmt9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaXJjbGVIZWxwXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1xdWVzdGlvbi1tYXJrJztcblxuLy8gQ2lyY2xlU2xhc2gyIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZVNsYXNoMn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIENpcmNsZVNsYXNoZWRcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLXNsYXNoLTInO1xuXG4vLyBDaXJjbGVTdG9wIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZVN0b3B9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBTdG9wQ2lyY2xlXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS1zdG9wJztcblxuLy8gQ2lyY2xlVXNlclJvdW5kIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENpcmNsZVVzZXJSb3VuZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFVzZXJDaXJjbGUyXG59IGZyb20gJy4uL2ljb25zL2NpcmNsZS11c2VyLXJvdW5kJztcblxuLy8gQ2lyY2xlVXNlciBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDaXJjbGVVc2VyfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgVXNlckNpcmNsZVxufSBmcm9tICcuLi9pY29ucy9jaXJjbGUtdXNlcic7XG5cbi8vIENpcmNsZVggYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2lyY2xlWH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFhDaXJjbGVcbn0gZnJvbSAnLi4vaWNvbnMvY2lyY2xlLXgnO1xuXG4vLyBDbGlwYm9hcmRQZW5MaW5lIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENsaXBib2FyZFBlbkxpbmV9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDbGlwYm9hcmRTaWduYXR1cmVcbn0gZnJvbSAnLi4vaWNvbnMvY2xpcGJvYXJkLXBlbi1saW5lJztcblxuLy8gQ2xpcGJvYXJkUGVuIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENsaXBib2FyZFBlbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIENsaXBib2FyZEVkaXRcbn0gZnJvbSAnLi4vaWNvbnMvY2xpcGJvYXJkLXBlbic7XG5cbi8vIENsb3VkRG93bmxvYWQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ2xvdWREb3dubG9hZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIERvd25sb2FkQ2xvdWRcbn0gZnJvbSAnLi4vaWNvbnMvY2xvdWQtZG93bmxvYWQnO1xuXG4vLyBDbG91ZFVwbG9hZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDbG91ZFVwbG9hZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFVwbG9hZENsb3VkXG59IGZyb20gJy4uL2ljb25zL2Nsb3VkLXVwbG9hZCc7XG5cbi8vIENvZGVYbWwgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ29kZVhtbH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIENvZGUyXG59IGZyb20gJy4uL2ljb25zL2NvZGUteG1sJztcblxuLy8gQ29sdW1uczIgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ29sdW1uczJ9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDb2x1bW5zXG59IGZyb20gJy4uL2ljb25zL2NvbHVtbnMtMic7XG5cbi8vIENvbHVtbnMzQ29nIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIENvbHVtbnMzQ29nfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQ29sdW1uc1NldHRpbmdzXG59IGZyb20gJy4uL2ljb25zL2NvbHVtbnMtMy1jb2cnO1xuXG4vLyBDb2x1bW5zM0NvZyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDb2x1bW5zM0NvZ30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFRhYmxlQ29uZmlnXG59IGZyb20gJy4uL2ljb25zL2NvbHVtbnMtMy1jb2cnO1xuXG4vLyBDb2x1bW5zMyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBDb2x1bW5zM30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBhbmVsc0xlZnRSaWdodFxufSBmcm9tICcuLi9pY29ucy9jb2x1bW5zLTMnO1xuXG4vLyBDb250YWN0Um91bmQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgQ29udGFjdFJvdW5kfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQ29udGFjdDJcbn0gZnJvbSAnLi4vaWNvbnMvY29udGFjdC1yb3VuZCc7XG5cbi8vIERpYW1vbmRQZXJjZW50IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIERpYW1vbmRQZXJjZW50fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGVyY2VudERpYW1vbmRcbn0gZnJvbSAnLi4vaWNvbnMvZGlhbW9uZC1wZXJjZW50JztcblxuLy8gRWFydGggYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgRWFydGh9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBHbG9iZTJcbn0gZnJvbSAnLi4vaWNvbnMvZWFydGgnO1xuXG4vLyBFbGxpcHNpc1ZlcnRpY2FsIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEVsbGlwc2lzVmVydGljYWx9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBNb3JlVmVydGljYWxcbn0gZnJvbSAnLi4vaWNvbnMvZWxsaXBzaXMtdmVydGljYWwnO1xuXG4vLyBFbGxpcHNpcyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBFbGxpcHNpc30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIE1vcmVIb3Jpem9udGFsXG59IGZyb20gJy4uL2ljb25zL2VsbGlwc2lzJztcblxuLy8gRmlsZUF4aXMzZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGaWxlQXhpczNkfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgRmlsZUF4aXMzRFxufSBmcm9tICcuLi9pY29ucy9maWxlLWF4aXMtM2QnO1xuXG4vLyBGaWxlQ2hhcnRDb2x1bW5JbmNyZWFzaW5nIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEZpbGVDaGFydENvbHVtbkluY3JlYXNpbmd9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBGaWxlQmFyQ2hhcnRcbn0gZnJvbSAnLi4vaWNvbnMvZmlsZS1jaGFydC1jb2x1bW4taW5jcmVhc2luZyc7XG5cbi8vIEZpbGVDaGFydENvbHVtbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGaWxlQ2hhcnRDb2x1bW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBGaWxlQmFyQ2hhcnQyXG59IGZyb20gJy4uL2ljb25zL2ZpbGUtY2hhcnQtY29sdW1uJztcblxuLy8gRmlsZUNoYXJ0TGluZSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGaWxlQ2hhcnRMaW5lfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgRmlsZUxpbmVDaGFydFxufSBmcm9tICcuLi9pY29ucy9maWxlLWNoYXJ0LWxpbmUnO1xuXG4vLyBGaWxlQ2hhcnRQaWUgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgRmlsZUNoYXJ0UGllfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgRmlsZVBpZUNoYXJ0XG59IGZyb20gJy4uL2ljb25zL2ZpbGUtY2hhcnQtcGllJztcblxuLy8gRmlsZUNvZyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGaWxlQ29nfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgRmlsZUNvZzJcbn0gZnJvbSAnLi4vaWNvbnMvZmlsZS1jb2cnO1xuXG4vLyBGaWxlUGVuTGluZSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGaWxlUGVuTGluZX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEZpbGVTaWduYXR1cmVcbn0gZnJvbSAnLi4vaWNvbnMvZmlsZS1wZW4tbGluZSc7XG5cbi8vIEZpbGVQZW4gYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgRmlsZVBlbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEZpbGVFZGl0XG59IGZyb20gJy4uL2ljb25zL2ZpbGUtcGVuJztcblxuLy8gRmlsZVBsYXkgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgRmlsZVBsYXl9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBGaWxlVmlkZW9cbn0gZnJvbSAnLi4vaWNvbnMvZmlsZS1wbGF5JztcblxuLy8gRmlsZVF1ZXN0aW9uTWFyayBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGaWxlUXVlc3Rpb25NYXJrfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgRmlsZVF1ZXN0aW9uXG59IGZyb20gJy4uL2ljb25zL2ZpbGUtcXVlc3Rpb24tbWFyayc7XG5cbi8vIEZpbGVWaWRlb0NhbWVyYSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGaWxlVmlkZW9DYW1lcmF9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBGaWxlVmlkZW8yXG59IGZyb20gJy4uL2ljb25zL2ZpbGUtdmlkZW8tY2FtZXJhJztcblxuLy8gRm9sZGVyQ29nIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEZvbGRlckNvZ30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEZvbGRlckNvZzJcbn0gZnJvbSAnLi4vaWNvbnMvZm9sZGVyLWNvZyc7XG5cbi8vIEZvbGRlclBlbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBGb2xkZXJQZW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBGb2xkZXJFZGl0XG59IGZyb20gJy4uL2ljb25zL2ZvbGRlci1wZW4nO1xuXG4vLyBGdW5uZWxYIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEZ1bm5lbFh9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBGaWx0ZXJYXG59IGZyb20gJy4uL2ljb25zL2Z1bm5lbC14JztcblxuLy8gRnVubmVsIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEZ1bm5lbH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEZpbHRlclxufSBmcm9tICcuLi9pY29ucy9mdW5uZWwnO1xuXG4vLyBHaXRDb21taXRIb3Jpem9udGFsIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEdpdENvbW1pdEhvcml6b250YWx9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBHaXRDb21taXRcbn0gZnJvbSAnLi4vaWNvbnMvZ2l0LWNvbW1pdC1ob3Jpem9udGFsJztcblxuLy8gR3JpZDJ4MkNoZWNrIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEdyaWQyeDJDaGVja30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEdyaWQyWDJDaGVja1xufSBmcm9tICcuLi9pY29ucy9ncmlkLTJ4Mi1jaGVjayc7XG5cbi8vIEdyaWQyeDJQbHVzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEdyaWQyeDJQbHVzfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgR3JpZDJYMlBsdXNcbn0gZnJvbSAnLi4vaWNvbnMvZ3JpZC0yeDItcGx1cyc7XG5cbi8vIEdyaWQyeDJYIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEdyaWQyeDJYfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgR3JpZDJYMlhcbn0gZnJvbSAnLi4vaWNvbnMvZ3JpZC0yeDIteCc7XG5cbi8vIEdyaWQyeDIgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgR3JpZDJ4Mn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEdyaWQyWDJcbn0gZnJvbSAnLi4vaWNvbnMvZ3JpZC0yeDInO1xuXG4vLyBHcmlkM3gzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEdyaWQzeDN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBHcmlkXG59IGZyb20gJy4uL2ljb25zL2dyaWQtM3gzJztcblxuLy8gR3JpZDN4MyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBHcmlkM3gzfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgR3JpZDNYM1xufSBmcm9tICcuLi9pY29ucy9ncmlkLTN4Myc7XG5cbi8vIEhhbmRHcmFiIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEhhbmRHcmFifSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgR3JhYlxufSBmcm9tICcuLi9pY29ucy9oYW5kLWdyYWInO1xuXG4vLyBIYW5kSGVscGluZyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBIYW5kSGVscGluZ30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEhlbHBpbmdIYW5kXG59IGZyb20gJy4uL2ljb25zL2hhbmQtaGVscGluZyc7XG5cbi8vIEhvdXNlIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIEhvdXNlfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgSG9tZVxufSBmcm9tICcuLi9pY29ucy9ob3VzZSc7XG5cbi8vIEljZUNyZWFtQm93bCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBJY2VDcmVhbUJvd2x9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBJY2VDcmVhbTJcbn0gZnJvbSAnLi4vaWNvbnMvaWNlLWNyZWFtLWJvd2wnO1xuXG4vLyBJY2VDcmVhbUNvbmUgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgSWNlQ3JlYW1Db25lfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgSWNlQ3JlYW1cbn0gZnJvbSAnLi4vaWNvbnMvaWNlLWNyZWFtLWNvbmUnO1xuXG4vLyBJbmRlbnREZWNyZWFzZSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBJbmRlbnREZWNyZWFzZX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIE91dGRlbnRcbn0gZnJvbSAnLi4vaWNvbnMvaW5kZW50LWRlY3JlYXNlJztcblxuLy8gSW5kZW50SW5jcmVhc2UgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgSW5kZW50SW5jcmVhc2V9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBJbmRlbnRcbn0gZnJvbSAnLi4vaWNvbnMvaW5kZW50LWluY3JlYXNlJztcblxuLy8gTGFwdG9wTWluaW1hbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBMYXB0b3BNaW5pbWFsfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgTGFwdG9wMlxufSBmcm9tICcuLi9pY29ucy9sYXB0b3AtbWluaW1hbCc7XG5cbi8vIExheWVycyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIGljb24gd2FzIGNvbWJpbmVkIHdpdGggYW5vdGhlciBpY29uIHRoYXQgc2hhcmVzIHRoZSBzYW1lIHVzZSBjYXNlLCB1c2Uge0BsaW5rIExheWVyc30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIExheWVyczNcbn0gZnJvbSAnLi4vaWNvbnMvbGF5ZXJzJztcblxuLy8gTG9hZGVyQ2lyY2xlIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIExvYWRlckNpcmNsZX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIExvYWRlcjJcbn0gZnJvbSAnLi4vaWNvbnMvbG9hZGVyLWNpcmNsZSc7XG5cbi8vIExvY2tLZXlob2xlT3BlbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBMb2NrS2V5aG9sZU9wZW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBVbmxvY2tLZXlob2xlXG59IGZyb20gJy4uL2ljb25zL2xvY2sta2V5aG9sZS1vcGVuJztcblxuLy8gTG9ja09wZW4gYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgTG9ja09wZW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBVbmxvY2tcbn0gZnJvbSAnLi4vaWNvbnMvbG9jay1vcGVuJztcblxuLy8gTWFpbFF1ZXN0aW9uTWFyayBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBNYWlsUXVlc3Rpb25NYXJrfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgTWFpbFF1ZXN0aW9uXG59IGZyb20gJy4uL2ljb25zL21haWwtcXVlc3Rpb24tbWFyayc7XG5cbi8vIE1hcFBpblBlbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBNYXBQaW5QZW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBMb2NhdGlvbkVkaXRcbn0gZnJvbSAnLi4vaWNvbnMvbWFwLXBpbi1wZW4nO1xuXG4vLyBNZXNzYWdlQ2lyY2xlUXVlc3Rpb25NYXJrIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIE1lc3NhZ2VDaXJjbGVRdWVzdGlvbk1hcmt9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBNZXNzYWdlQ2lyY2xlUXVlc3Rpb25cbn0gZnJvbSAnLi4vaWNvbnMvbWVzc2FnZS1jaXJjbGUtcXVlc3Rpb24tbWFyayc7XG5cbi8vIE1pY1ZvY2FsIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIE1pY1ZvY2FsfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgTWljMlxufSBmcm9tICcuLi9pY29ucy9taWMtdm9jYWwnO1xuXG4vLyBNb3ZlM2QgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgTW92ZTNkfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgTW92ZTNEXG59IGZyb20gJy4uL2ljb25zL21vdmUtM2QnO1xuXG4vLyBPY3RhZ29uQWxlcnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgT2N0YWdvbkFsZXJ0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQWxlcnRPY3RhZ29uXG59IGZyb20gJy4uL2ljb25zL29jdGFnb24tYWxlcnQnO1xuXG4vLyBPY3RhZ29uUGF1c2UgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgT2N0YWdvblBhdXNlfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGF1c2VPY3RhZ29uXG59IGZyb20gJy4uL2ljb25zL29jdGFnb24tcGF1c2UnO1xuXG4vLyBPY3RhZ29uWCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBPY3RhZ29uWH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFhPY3RhZ29uXG59IGZyb20gJy4uL2ljb25zL29jdGFnb24teCc7XG5cbi8vIFBhaW50YnJ1c2hWZXJ0aWNhbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBQYWludGJydXNoVmVydGljYWx9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQYWludGJydXNoMlxufSBmcm9tICcuLi9pY29ucy9wYWludGJydXNoLXZlcnRpY2FsJztcblxuLy8gUGFuZWxCb3R0b21EYXNoZWQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgUGFuZWxCb3R0b21EYXNoZWR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQYW5lbEJvdHRvbUluYWN0aXZlXG59IGZyb20gJy4uL2ljb25zL3BhbmVsLWJvdHRvbS1kYXNoZWQnO1xuXG4vLyBQYW5lbExlZnRDbG9zZSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBQYW5lbExlZnRDbG9zZX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNpZGViYXJDbG9zZVxufSBmcm9tICcuLi9pY29ucy9wYW5lbC1sZWZ0LWNsb3NlJztcblxuLy8gUGFuZWxMZWZ0RGFzaGVkIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFBhbmVsTGVmdERhc2hlZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBhbmVsTGVmdEluYWN0aXZlXG59IGZyb20gJy4uL2ljb25zL3BhbmVsLWxlZnQtZGFzaGVkJztcblxuLy8gUGFuZWxMZWZ0T3BlbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBQYW5lbExlZnRPcGVufSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgU2lkZWJhck9wZW5cbn0gZnJvbSAnLi4vaWNvbnMvcGFuZWwtbGVmdC1vcGVuJztcblxuLy8gUGFuZWxMZWZ0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFBhbmVsTGVmdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNpZGViYXJcbn0gZnJvbSAnLi4vaWNvbnMvcGFuZWwtbGVmdCc7XG5cbi8vIFBhbmVsUmlnaHREYXNoZWQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgUGFuZWxSaWdodERhc2hlZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBhbmVsUmlnaHRJbmFjdGl2ZVxufSBmcm9tICcuLi9pY29ucy9wYW5lbC1yaWdodC1kYXNoZWQnO1xuXG4vLyBQYW5lbFRvcERhc2hlZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBQYW5lbFRvcERhc2hlZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBhbmVsVG9wSW5hY3RpdmVcbn0gZnJvbSAnLi4vaWNvbnMvcGFuZWwtdG9wLWRhc2hlZCc7XG5cbi8vIFBhbmVsc1RvcExlZnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgUGFuZWxzVG9wTGVmdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIExheW91dFxufSBmcm9tICcuLi9pY29ucy9wYW5lbHMtdG9wLWxlZnQnO1xuXG4vLyBQZW5MaW5lIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFBlbkxpbmV9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBFZGl0M1xufSBmcm9tICcuLi9pY29ucy9wZW4tbGluZSc7XG5cbi8vIFBlbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBQZW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBFZGl0MlxufSBmcm9tICcuLi9pY29ucy9wZW4nO1xuXG4vLyBQbHVnWmFwIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFBsdWdaYXB9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQbHVnWmFwMlxufSBmcm9tICcuLi9pY29ucy9wbHVnLXphcCc7XG5cbi8vIFJlY3RhbmdsZUVsbGlwc2lzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFJlY3RhbmdsZUVsbGlwc2lzfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgRm9ybUlucHV0XG59IGZyb20gJy4uL2ljb25zL3JlY3RhbmdsZS1lbGxpcHNpcyc7XG5cbi8vIFJvdGF0ZTNkIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFJvdGF0ZTNkfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUm90YXRlM0Rcbn0gZnJvbSAnLi4vaWNvbnMvcm90YXRlLTNkJztcblxuLy8gUm93czIgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgUm93czJ9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBSb3dzXG59IGZyb20gJy4uL2ljb25zL3Jvd3MtMic7XG5cbi8vIFJvd3MzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFJvd3MzfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGFuZWxzVG9wQm90dG9tXG59IGZyb20gJy4uL2ljb25zL3Jvd3MtMyc7XG5cbi8vIFNjYWxlM2QgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU2NhbGUzZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNjYWxlM0Rcbn0gZnJvbSAnLi4vaWNvbnMvc2NhbGUtM2QnO1xuXG4vLyBTZW5kSG9yaXpvbnRhbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgUmVuYW1lZCBiZWNhdXNlIG9mIHR5cG8sIHVzZSB7QGxpbmsgU2VuZEhvcml6b250YWx9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBTZW5kSG9yaXpvbmFsXG59IGZyb20gJy4uL2ljb25zL3NlbmQtaG9yaXpvbnRhbCc7XG5cbi8vIFNoaWVsZFF1ZXN0aW9uTWFyayBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTaGllbGRRdWVzdGlvbk1hcmt9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBTaGllbGRRdWVzdGlvblxufSBmcm9tICcuLi9pY29ucy9zaGllbGQtcXVlc3Rpb24tbWFyayc7XG5cbi8vIFNoaWVsZFggYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU2hpZWxkWH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNoaWVsZENsb3NlXG59IGZyb20gJy4uL2ljb25zL3NoaWVsZC14JztcblxuLy8gU2xpZGVyc1ZlcnRpY2FsIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNsaWRlcnNWZXJ0aWNhbH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNsaWRlcnNcbn0gZnJvbSAnLi4vaWNvbnMvc2xpZGVycy12ZXJ0aWNhbCc7XG5cbi8vIFNwYXJrbGVzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNwYXJrbGVzfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgU3RhcnNcbn0gZnJvbSAnLi4vaWNvbnMvc3BhcmtsZXMnO1xuXG4vLyBTcXVhcmVBY3Rpdml0eSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVBY3Rpdml0eX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFjdGl2aXR5U3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1hY3Rpdml0eSc7XG5cbi8vIFNxdWFyZUFycm93RG93bkxlZnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQXJyb3dEb3duTGVmdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFycm93RG93bkxlZnRTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWFycm93LWRvd24tbGVmdCc7XG5cbi8vIFNxdWFyZUFycm93RG93blJpZ2h0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUFycm93RG93blJpZ2h0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dEb3duUmlnaHRTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWFycm93LWRvd24tcmlnaHQnO1xuXG4vLyBTcXVhcmVBcnJvd0Rvd24gYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQXJyb3dEb3dufSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dEb3duU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1hcnJvdy1kb3duJztcblxuLy8gU3F1YXJlQXJyb3dMZWZ0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUFycm93TGVmdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFycm93TGVmdFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtYXJyb3ctbGVmdCc7XG5cbi8vIFNxdWFyZUFycm93T3V0RG93blJpZ2h0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUFycm93T3V0RG93blJpZ2h0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dEb3duUmlnaHRGcm9tU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1hcnJvdy1vdXQtZG93bi1yaWdodCc7XG5cbi8vIFNxdWFyZUFycm93T3V0RG93bkxlZnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQXJyb3dPdXREb3duTGVmdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFycm93RG93bkxlZnRGcm9tU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1hcnJvdy1vdXQtZG93bi1sZWZ0JztcblxuLy8gU3F1YXJlQXJyb3dPdXRVcExlZnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQXJyb3dPdXRVcExlZnR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBcnJvd1VwTGVmdEZyb21TcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWFycm93LW91dC11cC1sZWZ0JztcblxuLy8gU3F1YXJlQXJyb3dSaWdodCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVBcnJvd1JpZ2h0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dSaWdodFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtYXJyb3ctcmlnaHQnO1xuXG4vLyBTcXVhcmVBcnJvd091dFVwUmlnaHQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQXJyb3dPdXRVcFJpZ2h0fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dVcFJpZ2h0RnJvbVNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtYXJyb3ctb3V0LXVwLXJpZ2h0JztcblxuLy8gU3F1YXJlQXJyb3dVcExlZnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQXJyb3dVcExlZnR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBcnJvd1VwTGVmdFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtYXJyb3ctdXAtbGVmdCc7XG5cbi8vIFNxdWFyZUFycm93VXBSaWdodCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVBcnJvd1VwUmlnaHR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBBcnJvd1VwUmlnaHRTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWFycm93LXVwLXJpZ2h0JztcblxuLy8gU3F1YXJlQXJyb3dVcCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVBcnJvd1VwfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgQXJyb3dVcFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtYXJyb3ctdXAnO1xuXG4vLyBTcXVhcmVBc3RlcmlzayBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVBc3Rlcmlza30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFzdGVyaXNrU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1hc3Rlcmlzayc7XG5cbi8vIFNxdWFyZUJvdHRvbURhc2hlZFNjaXNzb3JzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUJvdHRvbURhc2hlZFNjaXNzb3JzfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgU2Npc3NvcnNTcXVhcmVEYXNoZWRCb3R0b21cbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWJvdHRvbS1kYXNoZWQtc2Npc3NvcnMnO1xuXG4vLyBTcXVhcmVDaGFydEdhbnR0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUNoYXJ0R2FudHR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBHYW50dENoYXJ0U3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1jaGFydC1nYW50dCc7XG5cbi8vIFNxdWFyZUNoYXJ0R2FudHQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQ2hhcnRHYW50dH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNxdWFyZUdhbnR0Q2hhcnRcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWNoYXJ0LWdhbnR0JztcblxuLy8gU3F1YXJlQ2hlY2tCaWcgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQ2hlY2tCaWd9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaGVja1NxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtY2hlY2stYmlnJztcblxuLy8gU3F1YXJlQ2hlY2sgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQ2hlY2t9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaGVja1NxdWFyZTJcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWNoZWNrJztcblxuLy8gU3F1YXJlQ2hldnJvbkRvd24gYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQ2hldnJvbkRvd259IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaGV2cm9uRG93blNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtY2hldnJvbi1kb3duJztcblxuLy8gU3F1YXJlQ2hldnJvbkxlZnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlQ2hldnJvbkxlZnR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaGV2cm9uTGVmdFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtY2hldnJvbi1sZWZ0JztcblxuLy8gU3F1YXJlQ2hldnJvblJpZ2h0IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUNoZXZyb25SaWdodH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIENoZXZyb25SaWdodFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtY2hldnJvbi1yaWdodCc7XG5cbi8vIFNxdWFyZUNoZXZyb25VcCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVDaGV2cm9uVXB9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDaGV2cm9uVXBTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWNoZXZyb24tdXAnO1xuXG4vLyBTcXVhcmVDb2RlIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUNvZGV9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBDb2RlU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1jb2RlJztcblxuLy8gU3F1YXJlRGFzaGVkS2FuYmFuIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZURhc2hlZEthbmJhbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEthbmJhblNxdWFyZURhc2hlZFxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtZGFzaGVkLWthbmJhbic7XG5cbi8vIFNxdWFyZURhc2hlZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVEYXNoZWR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBCb3hTZWxlY3Rcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWRhc2hlZCc7XG5cbi8vIFNxdWFyZURpdmlkZSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVEaXZpZGV9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBEaXZpZGVTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWRpdmlkZSc7XG5cbi8vIFNxdWFyZURhc2hlZE1vdXNlUG9pbnRlciBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVEYXNoZWRNb3VzZVBvaW50ZXJ9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBNb3VzZVBvaW50ZXJTcXVhcmVEYXNoZWRcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWRhc2hlZC1tb3VzZS1wb2ludGVyJztcblxuLy8gU3F1YXJlRG90IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZURvdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIERvdFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtZG90JztcblxuLy8gU3F1YXJlRXF1YWwgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlRXF1YWx9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBFcXVhbFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtZXF1YWwnO1xuXG4vLyBTcXVhcmVGdW5jdGlvbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVGdW5jdGlvbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEZ1bmN0aW9uU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1mdW5jdGlvbic7XG5cbi8vIFNxdWFyZUxpYnJhcnkgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlTGlicmFyeX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIExpYnJhcnlTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLWxpYnJhcnknO1xuXG4vLyBTcXVhcmVNIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZU19IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBNU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1tJztcblxuLy8gU3F1YXJlS2FuYmFuIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZUthbmJhbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEthbmJhblNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUta2FuYmFuJztcblxuLy8gU3F1YXJlTWVudSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVNZW51fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgTWVudVNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtbWVudSc7XG5cbi8vIFNxdWFyZU1vdXNlUG9pbnRlciBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVNb3VzZVBvaW50ZXJ9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBJbnNwZWN0XG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1tb3VzZS1wb2ludGVyJztcblxuLy8gU3F1YXJlTWludXMgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlTWludXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBNaW51c1NxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtbWludXMnO1xuXG4vLyBTcXVhcmVQYXJraW5nT2ZmIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVBhcmtpbmdPZmZ9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQYXJraW5nU3F1YXJlT2ZmXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1wYXJraW5nLW9mZic7XG5cbi8vIFNxdWFyZVBhcmtpbmcgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlUGFya2luZ30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBhcmtpbmdTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLXBhcmtpbmcnO1xuXG4vLyBTcXVhcmVQZXJjZW50IGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVBlcmNlbnR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQZXJjZW50U3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1wZXJjZW50JztcblxuLy8gU3F1YXJlUGVuIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVBlbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBlbkJveFxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtcGVuJztcblxuLy8gU3F1YXJlUGVuIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVBlbn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEVkaXRcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLXBlbic7XG5cbi8vIFNxdWFyZVBlbiBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVQZW59IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQZW5TcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLXBlbic7XG5cbi8vIFNxdWFyZVBpIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVBpfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGlTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLXBpJztcblxuLy8gU3F1YXJlUGlsY3JvdyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVQaWxjcm93fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgUGlsY3Jvd1NxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtcGlsY3Jvdyc7XG5cbi8vIFNxdWFyZVBsYXkgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlUGxheX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBsYXlTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLXBsYXknO1xuXG4vLyBTcXVhcmVQbHVzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVBsdXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQbHVzU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1wbHVzJztcblxuLy8gU3F1YXJlUG93ZXIgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlUG93ZXJ9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBQb3dlclNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtcG93ZXInO1xuXG4vLyBTcXVhcmVTY2lzc29ycyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVTY2lzc29yc30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNjaXNzb3JzU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1zY2lzc29ycyc7XG5cbi8vIFNxdWFyZVNpZ21hIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVNpZ21hfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgU2lnbWFTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLXNpZ21hJztcblxuLy8gU3F1YXJlU2xhc2ggYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlU2xhc2h9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBTbGFzaFNxdWFyZVxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtc2xhc2gnO1xuXG4vLyBTcXVhcmVTcGxpdEhvcml6b250YWwgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlU3BsaXRIb3Jpem9udGFsfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgU3BsaXRTcXVhcmVIb3Jpem9udGFsXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS1zcGxpdC1ob3Jpem9udGFsJztcblxuLy8gU3F1YXJlU3BsaXRWZXJ0aWNhbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVTcGxpdFZlcnRpY2FsfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgU3BsaXRTcXVhcmVWZXJ0aWNhbFxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtc3BsaXQtdmVydGljYWwnO1xuXG4vLyBTcXVhcmVUZXJtaW5hbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVUZXJtaW5hbH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFRlcm1pbmFsU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS10ZXJtaW5hbCc7XG5cbi8vIFNxdWFyZVVzZXJSb3VuZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBTcXVhcmVVc2VyUm91bmR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBVc2VyU3F1YXJlMlxufSBmcm9tICcuLi9pY29ucy9zcXVhcmUtdXNlci1yb3VuZCc7XG5cbi8vIFNxdWFyZVVzZXIgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgU3F1YXJlVXNlcn0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFVzZXJTcXVhcmVcbn0gZnJvbSAnLi4vaWNvbnMvc3F1YXJlLXVzZXInO1xuXG4vLyBTcXVhcmVYIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFNxdWFyZVh9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBYU3F1YXJlXG59IGZyb20gJy4uL2ljb25zL3NxdWFyZS14JztcblxuLy8gVGVzdFR1YmVEaWFnb25hbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBUZXN0VHViZURpYWdvbmFsfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgVGVzdFR1YmUyXG59IGZyb20gJy4uL2ljb25zL3Rlc3QtdHViZS1kaWFnb25hbCc7XG5cbi8vIFRleHRTZWxlY3QgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgVGV4dFNlbGVjdH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFRleHRTZWxlY3Rpb25cbn0gZnJvbSAnLi4vaWNvbnMvdGV4dC1zZWxlY3QnO1xuXG4vLyBUcmFtRnJvbnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgVHJhbUZyb250fSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgVHJhaW5cbn0gZnJvbSAnLi4vaWNvbnMvdHJhbS1mcm9udCc7XG5cbi8vIFRyaWFuZ2xlQWxlcnQgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgVHJpYW5nbGVBbGVydH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEFsZXJ0VHJpYW5nbGVcbn0gZnJvbSAnLi4vaWNvbnMvdHJpYW5nbGUtYWxlcnQnO1xuXG4vLyBUcmVlUGFsbSBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBUcmVlUGFsbX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFBhbG10cmVlXG59IGZyb20gJy4uL2ljb25zL3RyZWUtcGFsbSc7XG5cbi8vIFR2TWluaW1hbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBUdk1pbmltYWx9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBUdjJcbn0gZnJvbSAnLi4vaWNvbnMvdHYtbWluaW1hbCc7XG5cbi8vIFVuaXZlcnNpdHkgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgVW5pdmVyc2l0eX0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFNjaG9vbDJcbn0gZnJvbSAnLi4vaWNvbnMvdW5pdmVyc2l0eSc7XG5cbi8vIFVzZXJSb3VuZENoZWNrIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFVzZXJSb3VuZENoZWNrfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgVXNlckNoZWNrMlxufSBmcm9tICcuLi9pY29ucy91c2VyLXJvdW5kLWNoZWNrJztcblxuLy8gVXNlclJvdW5kQ29nIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFVzZXJSb3VuZENvZ30gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIFVzZXJDb2cyXG59IGZyb20gJy4uL2ljb25zL3VzZXItcm91bmQtY29nJztcblxuLy8gVXNlclJvdW5kTWludXMgYWxpYXNlc1xuZXhwb3J0IHtcbiAgLyoqIEBkZXByZWNhdGVkIFRoZSBuYW1lIG9mIHRoaXMgaWNvbiB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IGRpZG4ndCBtZWV0IG91ciBndWlkZWxpbmVzIGFueW1vcmUsIHVzZSB7QGxpbmsgVXNlclJvdW5kTWludXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBVc2VyTWludXMyXG59IGZyb20gJy4uL2ljb25zL3VzZXItcm91bmQtbWludXMnO1xuXG4vLyBVc2VyUm91bmRQbHVzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFVzZXJSb3VuZFBsdXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBVc2VyUGx1czJcbn0gZnJvbSAnLi4vaWNvbnMvdXNlci1yb3VuZC1wbHVzJztcblxuLy8gVXNlclJvdW5kWCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBVc2VyUm91bmRYfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgVXNlclgyXG59IGZyb20gJy4uL2ljb25zL3VzZXItcm91bmQteCc7XG5cbi8vIFVzZXJSb3VuZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBVc2VyUm91bmR9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBVc2VyMlxufSBmcm9tICcuLi9pY29ucy91c2VyLXJvdW5kJztcblxuLy8gVXNlcnNSb3VuZCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBVc2Vyc1JvdW5kfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgVXNlcnMyXG59IGZyb20gJy4uL2ljb25zL3VzZXJzLXJvdW5kJztcblxuLy8gVXRlbnNpbHNDcm9zc2VkIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFV0ZW5zaWxzQ3Jvc3NlZH0gaW5zdGVhZC4gVGhpcyBhbGlhcyB3aWxsIGJlIHJlbW92ZWQgaW4gdjEuMCAqL1xuICBkZWZhdWx0IGFzIEZvcmtLbmlmZUNyb3NzZWRcbn0gZnJvbSAnLi4vaWNvbnMvdXRlbnNpbHMtY3Jvc3NlZCc7XG5cbi8vIFV0ZW5zaWxzIGFsaWFzZXNcbmV4cG9ydCB7XG4gIC8qKiBAZGVwcmVjYXRlZCBUaGUgbmFtZSBvZiB0aGlzIGljb24gd2FzIGNoYW5nZWQgYmVjYXVzZSBpdCBkaWRuJ3QgbWVldCBvdXIgZ3VpZGVsaW5lcyBhbnltb3JlLCB1c2Uge0BsaW5rIFV0ZW5zaWxzfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgRm9ya0tuaWZlXG59IGZyb20gJy4uL2ljb25zL3V0ZW5zaWxzJztcblxuLy8gV2FsbGV0TWluaW1hbCBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBXYWxsZXRNaW5pbWFsfSBpbnN0ZWFkLiBUaGlzIGFsaWFzIHdpbGwgYmUgcmVtb3ZlZCBpbiB2MS4wICovXG4gIGRlZmF1bHQgYXMgV2FsbGV0MlxufSBmcm9tICcuLi9pY29ucy93YWxsZXQtbWluaW1hbCc7XG5cbi8vIFdhbmRTcGFya2xlcyBhbGlhc2VzXG5leHBvcnQge1xuICAvKiogQGRlcHJlY2F0ZWQgVGhlIG5hbWUgb2YgdGhpcyBpY29uIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaXQgZGlkbid0IG1lZXQgb3VyIGd1aWRlbGluZXMgYW55bW9yZSwgdXNlIHtAbGluayBXYW5kU3BhcmtsZXN9IGluc3RlYWQuIFRoaXMgYWxpYXMgd2lsbCBiZSByZW1vdmVkIGluIHYxLjAgKi9cbiAgZGVmYXVsdCBhcyBXYW5kMlxufSBmcm9tICcuLi9pY29ucy93YW5kLXNwYXJrbGVzJztcblxuIl19